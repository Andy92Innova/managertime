version: '0.1'
services:
  backend:
    image: andydar/managertime-backend:0.3
    ports:
      - 5001:5001
    healthcheck: 
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/healthcheck"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      db:
        condition: service_healthy
    environment:
      SERVER_PORT: 5001
      NODE_ENV: production
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "123456789"
      POSTGRES_DB: managertime
      POSTGRES_HOST: host.docker.internal
      POSTGRES_PORT: 5000
      POSTGRES_REJECTUNAUTHORIZED: false
      POSTGRES_DIALECT: postgres
      SECRET_KEY_ENCRYPT: "1234567890"
    networks:
      - back-tier
      - front-tier
    
  frontend:
    image: andydar/managertime-frontend:0.3
    ports:
      - 5002:4200
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - front-tier
  
  db:
    image: postgres
    ports:
      - 5000:5432
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "123456789"
      POSTGRES_DB: managertime
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./healthchecks:/healthchecks"
      - "./sqlfiles/consider_only:/docker-entrypoint-initdb.d"
    healthcheck:
      test: /healthchecks/postgres.sh
      interval: "5s"
    networks:
      - back-tier
  
volumes:
    db-data:
  
networks:
  front-tier:
  back-tier:
